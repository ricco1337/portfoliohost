"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/githubportfolio/index.html","053926e599ec920f89ea68f6b40d2965"],["/githubportfolio/static/css/main.1fd31e5e.css","fdfb2eb762b64d62ef01cfc3eacbb788"],["/githubportfolio/static/js/main.62d08384.js","5789f065b0039ab5e3000a086e87ba1c"],["/githubportfolio/static/media/bioImg.864a6765.jpg","864a676536afc30588245845a094aaa0"],["/githubportfolio/static/media/boosted-screenshot1.04d9f0f6.png","04d9f0f6019e8b205d0ac4dfbc48e41c"],["/githubportfolio/static/media/boosted-screenshot2.63027c77.png","63027c770b689f56da1c66c8109cfd0a"],["/githubportfolio/static/media/boosted-screenshot3.c154e600.png","c154e6001d78864d26b5df8de2dc3348"],["/githubportfolio/static/media/boosted.23907917.png","23907917917f671aa2d7a37d71ecfa81"],["/githubportfolio/static/media/flag.864a6765.jpg","864a676536afc30588245845a094aaa0"],["/githubportfolio/static/media/nikehome.a7abda3a.png","a7abda3a2c2b53ae8294d04891ef501f"],["/githubportfolio/static/media/nikemen.a6cb32f2.png","a6cb32f25fc6d73bc5c3b43b69e649c8"],["/githubportfolio/static/media/nikewomen.bec9baef.png","bec9baef0797900b314ee4d322759cc4"],["/githubportfolio/static/media/resume.3e10be65.jpg","3e10be65c515d1158e42545a648d3f3c"],["/githubportfolio/static/media/resumeimg.dace9544.png","dace95440b2c8fd3aac6278b7a430297"],["/githubportfolio/static/media/resumeimg2.4da42275.png","4da42275bb2708a8571df0ae771df63a"],["/githubportfolio/static/media/sistema-screenshot1.7f25913a.png","7f25913a6bbe9621842286b67551d07f"],["/githubportfolio/static/media/sistema-screenshot2.0e8580b7.png","0e8580b72873f87e4528082b8a508b7f"],["/githubportfolio/static/media/sistema-screenshot3.35fca6e9.png","35fca6e97b7276dd0948897a37b5a7c2"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/githubportfolio/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});